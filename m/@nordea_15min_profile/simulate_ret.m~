function [ret, lv] = simulate_ret(me, N, np)
%% Simulate np paths of realizations of the model.
% Each path has length N
s = me.s;
z = randn(N+(s+1), np);
y = me.jsp.Xi + me.jsp.Lambda * ...
    sinh((z - me.jsp.Gamma)./me.jsp.Delta);
w = NaN(N, np);
lv = NaN(N+s+1, np);
mu = mean(me.lv);
for t = s+2:N+s+1
    w(t-s-1, :) = y(t, :) - me.MA * y(t - [1:s+1], :);
end
% An outer-product to augment the vector into a
% matrix of np identical columns.
lv(1:s+1, :) = (me.lv(end-s:end) - mu) * ones(1, np);
for t = s+2:N+s+1
    lv(t, :) = w(t-s-1, :) + lv(t-1, :) ...
        + lv(t-s, :) - lv(t-s-1, :);
end
lv = lv(s+2:end, :) + mu;
ret = randn(N, np) .* exp(lv);
